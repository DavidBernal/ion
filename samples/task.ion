// readFile :: String -> String -> Task Error String
readFile = (filename) =>
  Task((rej, res) => 
    fs.readFile(filename, {encoding: 'utf8'}, (err, data) => 
      err != null ? rej(err) : res(data)))
 
// concatFiles :: String -> Task Error String
concatFiles = pipe(
  readFile,                 // :: Task Error String
  map(trim),                // :: Task Error String
  map(split("\n")),         // :: Task Error [String]
  map(map(readFile)),       // :: Task Error [Task Error String]
  chain(sequence(Task.of)), // :: Task Error [String]
  map(join(''))             // :: Task Error String
)

concatFiles('index.txt').fork(
  (err) => put(String(err) + '\n') && process.exit(1),
  (data) => put(data) && process.exit(0)
)
