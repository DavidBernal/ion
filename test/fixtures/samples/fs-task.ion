Async = require('control.async')(Task)

read = (filename) =>
  Task((rej, res) =>
    fs.readFile(filename, {encoding: 'utf8'}, (err, data) =>
      err != null ? rej(err) : res(data)))

fork = invoker(2, 'fork')

z = pipe(
  map(read),
  map(match('a')),
  map(fork(console.error, console.log))
)

z(['a.js'])


// wait = Async.delay
//
// // runs all in par
// Async.parallel([wait(5000), wait(4000), wait(3000)]).fork(put, put)
//
// // gets the first to succeed of fail
// Async.choice([wait(5000), wait(4000), wait(3000)]).fork(put, put)
//
// ok = Task.of(true)
// meh = Task.rejected(false)
//
// // one should be ok!
// Async.tryAll([meh, meh, ok]).fork(put, put)
